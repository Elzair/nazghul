//
// Copyright-Only Dedication (based on United States law)
//
// The person or persons who have associated their work with this document (the
// "Dedicator") hereby dedicate the entire copyright in the work of authorship
// identified below (the "Work") to the public domain.
//
// Dedicator makes this dedication for the benefit of the public at large and
// to the detriment of Dedicator's heirs and successors. Dedicator intends this
// dedication to be an overt act of relinquishment in perpetuity of all present
// and future rights under copyright law, whether vested or contingent, in the
// Work. Dedicator understands that such relinquishment of all rights includes
// the relinquishment of all rights to enforce (by lawsuit or otherwise) those
// copyrights in the Work.
//
// Dedicator recognizes that, once placed in the public domain, the Work may be
// freely reproduced, distributed, transmitted, used, modified, built upon, or
// otherwise exploited by anyone for any purpose, commercial or non-commercial,
// and in any way, including by methods that have not yet been invented or
// conceived.
//
/* rune_font_sprite_set_8x16.ghul
 *
 * Defines a sprite set for an Anglo-Saxon Runic font.
 * The sprites are intended for use as terrain, in the form
 * of large, usually horizontal-reading signs, where each
 * letter takes up 1 terrain tile (notionally 1 yard or so).
 * 
 * This font is modeled after a variation of Anglo-Saxon
 * runes which I have heard referred to as "Anglo-American".
 * 
 * Font created by Sam Glasby (2003).
 * 
 * TODO:
 * This terrain font would be more complete if sprites
 * for (left endcap, right endcap, and numerals 0123456789)
 * were included.
 */
#ifndef rune_font_sprite_set_8x16_ghul
#define rune_font_sprite_set_8x16_ghul


SPRITE_SET ss_rune_font_8x16 {
  
  image_width   8;
  image_height 16;
  file_rows     1;
  file_cols    32;
  file_offx     0;
  file_offy     0;
  file         "data/images/rune_font_8x16.png";
  
  sprites {
    STD_SPRITE(ls_rune_A,        0);
    STD_SPRITE(ls_rune_B,        1);
    STD_SPRITE(ls_rune_C,        2);
    STD_SPRITE(ls_rune_D,        3);
    STD_SPRITE(ls_rune_E,        4);
    STD_SPRITE(ls_rune_F,        5);
    STD_SPRITE(ls_rune_G,        6);
    STD_SPRITE(ls_rune_H,        7);

    STD_SPRITE(ls_rune_I,        8);
    STD_SPRITE(ls_rune_J,        9);
    STD_SPRITE(ls_rune_K,       10);
    STD_SPRITE(ls_rune_L,       11);
    STD_SPRITE(ls_rune_M,       12);
    STD_SPRITE(ls_rune_N,       13);
    STD_SPRITE(ls_rune_O,       14);
    STD_SPRITE(ls_rune_P,       15);

    STD_SPRITE(ls_rune_Q,       16);
    STD_SPRITE(ls_rune_R,       17);
    STD_SPRITE(ls_rune_S,       18);
    STD_SPRITE(ls_rune_T,       19);
    STD_SPRITE(ls_rune_U,       20);
    STD_SPRITE(ls_rune_V,       21);
    STD_SPRITE(ls_rune_W,       22);
    STD_SPRITE(ls_rune_X,       23);

    STD_SPRITE(ls_rune_Y,       24);
    STD_SPRITE(ls_rune_Z,       25);
    STD_SPRITE(ls_rune_TH,      26);
    STD_SPRITE(ls_rune_EE,      27);
    STD_SPRITE(ls_rune_NG,      28);
    STD_SPRITE(ls_rune_EA,      29);
    STD_SPRITE(ls_rune_ST,      30);
    STD_SPRITE(ls_rune_DOTSEP,  31);    
  }
} /* SPRITE_SET ss_rune_font_8x16 */


#endif // rune_font_sprite_set_8x16_ghul

/* eof */
