//
// Copyright-Only Dedication (based on United States law)
//
// The person or persons who have associated their work with this document (the
// "Dedicator") hereby dedicate the entire copyright in the work of authorship
// identified below (the "Work") to the public domain.
//
// Dedicator makes this dedication for the benefit of the public at large and
// to the detriment of Dedicator's heirs and successors. Dedicator intends this
// dedication to be an overt act of relinquishment in perpetuity of all present
// and future rights under copyright law, whether vested or contingent, in the
// Work. Dedicator understands that such relinquishment of all rights includes
// the relinquishment of all rights to enforce (by lawsuit or otherwise) those
// copyrights in the Work.
//
// Dedicator recognizes that, once placed in the public domain, the Work may be
// freely reproduced, distributed, transmitted, used, modified, built upon, or
// otherwise exploited by anyone for any purpose, commercial or non-commercial,
// and in any way, including by methods that have not yet been invented or
// conceived.
//

#ifndef species_ghul
#define species_ghul

#define STD_DAMAGE_SOUND damage_sound   "data/sounds/damage.wav"
#define WALKING_SOUND    movement_sound "data/sounds/walk.wav"
#define SPLASHING_SOUND  movement_sound "data/sounds/rowing.wav"
#define SQUISHING_SOUND  movement_sound "data/sounds/walk.wav"

//////////////////////////////////////////////////////////////////////////////
//
// SPECIES
//
// name - Used when describing generic characters to the player(e.g, "you meet
//        a dwarf fighter").
//
// str  - Sets the max weight of combined armaments for a character, affects
//        roll to hit with melee weapons(*), roll to push objects (in party 
//        mode the strongest character is assumed)(*).
//
// int  - Affects roll to cast spell(*).
//
// dex  - Affects roll to disarm trap, roll to defend(*), roll to hit with 
//        ranged or thrown weapon(*).
//
// spd  - Affects party movement speed in towns and wilderness. A party is 
//        limited by its slowest member.
//
// vr   - vision radius, used in these ways:
//
//        1) The vision radius of an npc party is the max vision radius
//           of any species in the party, this determines how far away the
//           npc party can see the player party and give pursuit
//
//        2) The vision radius of the player party is the max vision radius of
//           any member character (and by default a member character's vision
//           radius comes from its species). If the engine is played in 
//           circular line-of-sight mode then this sets the radius of the los.
//           Currently the engine is not played in circular los mode so this
//           isn't so important.
//
//        3) The vision radius of a character on a combat map typically 
//           defaults to this value, and is used for npc combatants who are
//           looking for targets within visible range.
//
//        4) For player characters on a combat map this sets the radius their
//           los, which in turn determines how much of the map is visible to
//           the player.
//
// pmask
//      - Specifies which terrain types are passable to this species.
//
// hp_mod
// hp_mult
// mp_mod
// mp_mult
// hit_mod
// def_mod
// dam_mod
// arm_mod
//      - The hit point, mana point, to-hit, to-defend, damage and armour
//        modifiers(*).
//
// sleep_sprite
//      - Optional sprite to use when a character of this species type is 
//        asleep, dead or unconscious
//
// weapon
//      - Default weapon when none is readied by a character of this species.
//
// visible
//      - Zero for invisible species (e.g. some ghosts)
//
// slots
//      - Armament and wearable item slots. ARMS and item types specify which
//        slots they must go in, and determine wether or not a character can
//        ready them by matching them against available species slots.
//
// spells
//      - This is how "natural abilities" are hacked in :-). For example,
//        snakes which spit poision naturally have a "poison" spell which they
//        can "cast" in combat. This works ok but it means the negate-magic 
//        effect can prevent snakes from spitting poison, so it isn't ideal.
//        This will probably change in subsequent revisions of the engine.
//
// damage_sound (optional)
//      - Sound file to play when a character of this species takes damage.
//
// movement_sound (optional)
//      - Sound file to play when a character of this species takes a step.
//
// (*) = that's a lie, but it is planned real soon (for 0.2.0)
//
//////////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////////
//
// def = species + occ + char + level + dex/25
// hit = species + occ + char + level + str/25
//
//////////////////////////////////////////////////////////////////////////////
SPECIES human {
  name    "human";
  str     20; 
  int     20;
  dex     20;
  spd     2; // turns taken for easiest terrain multiplied by scale factor
  vr      13; // max AI vision radius (won't see the player beyond this range)
  pmask   (LAND);

  hp_mod  20;
  hp_mult 2;
  mp_mod  10;
  mp_mult 10; // but a lvl 1 human can cast 1 lvl 1 spell
  hit_mod 0;
  def_mod 0;
  dam_mod 0;
  arm_mod 0;

  // size 20;
  sleep_sprite s_corpse;
  weapon       t_hands;
  visible      1;
  slots {
    HELM_SLOT;
    AMULET_SLOT;
    WEAPON_OR_SHIELD_SLOT;
    WEAPON_OR_SHIELD_SLOT;
    ARMOUR_SLOT;
    BOOT_SLOT;
    RING_SLOT;
    RING_SLOT;
  }
  spells {
  }
  STD_DAMAGE_SOUND;
  WALKING_SOUND;
}

SPECIES goblin {
  name    "goblin";
  str     18;
  int     18;
  dex     22;
  spd     2;
  vr      14;
  pmask   (LAND);

  hp_mod  15;
  hp_mult 2;
  mp_mod  10;
  mp_mult 10;
  hit_mod 0;
  def_mod 0;
  dam_mod 0;
  arm_mod 0;

  sleep_sprite s_corpse;
  weapon t_hands;
  visible 1;
  slots {
    HELM_SLOT;
    AMULET_SLOT;
    WEAPON_OR_SHIELD_SLOT;
    WEAPON_OR_SHIELD_SLOT;
    ARMOUR_SLOT;
    BOOT_SLOT;
    RING_SLOT;
    RING_SLOT;
  }
  spells {
  }
  STD_DAMAGE_SOUND;
  WALKING_SOUND;
}

SPECIES gazer {
  name    "gazer";
  str     10;
  int     30;
  dex     10;
  spd     4;
  vr      19;
  pmask   (LAND|SHOALS);

  hp_mod  10;
  hp_mult 1;
  mp_mod  20; // natural magic-users
  mp_mult 15;
  hit_mod -1;
  def_mod -1;
  dam_mod 0;
  arm_mod -1; // they're soft...

  sleep_sprite s_corpse;
  weapon t_teeth;
  visible 1;
  slots {
    HELM_SLOT;
    AMULET_SLOT;
    AMULET_SLOT;
    RING_SLOT;
    RING_SLOT;
    RING_SLOT;
    RING_SLOT;
  }
  spells {
    spell_poison;
    spell_sleep;
    spell_charm;
  }
  STD_DAMAGE_SOUND;
}

SPECIES skeleton {
  name    "skeleton";
  str     10;
  int     10;
  dex     10;
  spd     2;
  vr      8;
  pmask   (LAND);

  hp_mod  22; // a bit hard to kill
  hp_mult 2;
  mp_mod  0;
  mp_mult 0;
  hit_mod 0;
  def_mod +1; // a bit hard to kill
  dam_mod 0;
  arm_mod 0;

  sleep_sprite s_corpse;
  weapon t_hands;
  visible 1
  slots {
    HELM_SLOT;
    AMULET_SLOT;
    WEAPON_OR_SHIELD_SLOT;
    WEAPON_OR_SHIELD_SLOT;
    ARMOUR_SLOT;
    BOOT_SLOT;
    RING_SLOT;
    RING_SLOT;
  }
  spells {
  }
  STD_DAMAGE_SOUND;
  WALKING_SOUND;
}

SPECIES horse {
  name    "horse";
  str     30;
  int     10;
  dex     20;
  spd     2;
  vr      8;
  pmask   (LAND);

  hp_mod  30; // largish
  hp_mult 1;
  mp_mod  0; // mundane
  mp_mult 0;
  hit_mod 0;
  def_mod 0;
  dam_mod 0;
  arm_mod 0;

  sleep_sprite null;
  weapon       t_hooves;  // SAM: Noticed that 'null' is not valid here...
  visible 1
  slots {
  }
  spells {
  }
  STD_DAMAGE_SOUND;
}

SPECIES snake {
  name    "snake";
  str     5;
  int     1;
  dex     5; // ?
  spd     2;
  vr      6;
  pmask   (LAND);

  hp_mod  5; // kill them with one blow from about anything
  hp_mult 1;
  mp_mod  20; // level 0 can spit poison once
  mp_mult 10; // once more per level
  hit_mod 0;
  def_mod +2; // but a bit hard to hit
  dam_mod 0;
  arm_mod 0;

  sleep_sprite null;
  weapon t_teeth;
  visible 1
  slots {
  }
  spells {
    spell_poison;
  }
  STD_DAMAGE_SOUND;
}

SPECIES insects {
  name    "insect swarm";
  str     1;
  int     1;
  dex     1;
  spd     2;
  vr      4;
  pmask   (LAND);

  hp_mod  5;
  hp_mult 1;
  mp_mod  0;
  mp_mult 0;
  hit_mod 0;
  def_mod +3;
  dam_mod 0;
  arm_mod 0;

  sleep_sprite null;
  weapon       t_stinger;
  visible      1
  slots {
  }
  spells {
  }
  STD_DAMAGE_SOUND;
}

SPECIES ghast {
  name    "ghast";
  str     20;
  int     20;
  dex     20;
  spd     2;
  vr      8;
  pmask   (LAND|WATER|SHOALS|SOLID);

  hp_mod  10; // most are pretty ethereal
  hp_mult 5;  // but high-level gets tougher
  mp_mod  10;
  mp_mult 10;
  hit_mod 0;
  def_mod +1;
  dam_mod -1;
  arm_mod -1;

  sleep_sprite s_corpse;
  weapon       t_hands;
  visible      0
  slots {
    HELM_SLOT;
    AMULET_SLOT;
    WEAPON_OR_SHIELD_SLOT;
    WEAPON_OR_SHIELD_SLOT;
    ARMOUR_SLOT;
    BOOT_SLOT;
    RING_SLOT;
    RING_SLOT;
  }
  spells {
  }
  STD_DAMAGE_SOUND;
}

SPECIES nixie {
  name  "nixie";
  str   18;
  int   18;
  dex   18;
  spd   2;
  vr    10;
  pmask (WATER|SHOALS);

  hp_mod  16;
  hp_mult 2;
  mp_mod  10;
  mp_mult 10;
  hit_mod 0;
  def_mod 0;
  dam_mod 0;
  arm_mod +1; // protected somewhat by water

  sleep_sprite s_corpse;
  weapon       t_hands;  // Should be magical water blast...
  visible      1;
  slots {
    HELM_SLOT;
    AMULET_SLOT;
    WEAPON_OR_SHIELD_SLOT;
    WEAPON_OR_SHIELD_SLOT;
    ARMOUR_SLOT;
    RING_SLOT;
    RING_SLOT;
  }
  spells {
    spell_magic_missile;
  }
  STD_DAMAGE_SOUND;
  SPLASHING_SOUND;
}

SPECIES water_elemental {
  name  "water elemental";
  str   25;
  int   25;
  dex   25;
  spd   3;
  vr    10;
  pmask (WATER|SHOALS);

  hp_mod  30;
  hp_mult 10;
  mp_mod  10;
  mp_mult 10;
  hit_mod 0;
  def_mod 0;
  dam_mod 0;
  arm_mod 0;

  sleep_sprite s_shallow;  // Looks like water when asleep...  :-)
  weapon       t_hands;  // Should be magical water blast...
  visible      1;
  slots {
  }
  spells {
    spell_magic_missile;
  }
  STD_DAMAGE_SOUND;
  SPLASHING_SOUND;
}


SPECIES slime {
        name  "green slime";
        str   3;
        int   1;
        dex   3;
        spd   2;
        vr    8;
        pmask (LAND);

        hp_mod  10;
        hp_mult 1;
        mp_mod  0;
        mp_mult 0;
        hit_mod 0;
        def_mod +1; // not quick, but spongy
        dam_mod 0;
        arm_mod 0;

        sleep_sprite s_slime_asleep;
        weapon       t_acid_spray;
        visible      1;
        slots {}
        spells {}
        STD_DAMAGE_SOUND;
        SQUISHING_SOUND;

        // New and somewhat experimental, this section lists the set of effects
        // which members of this species automatically acquire.
        // Hack: I was 50% of the way through implementing effects
        // when, knowing that it would all be thrown away after 0.2.0,
        // I got sick of writing all the boilerplate parsing code.
        effects  (EFFECT_CLONE);

        immunities (EFFECT_POISON); // they like bogs
}

SPECIES yellow_slime {
        name  "yellow slime";
        str   4;
        int   4;
        dex   4;
        spd   2;
        vr    8;
        pmask (LAND);

        hp_mod  15;
        hp_mult 1;
        mp_mod  20; // can cast slime-summon...
        mp_mult 20; // ...once per level
        hit_mod +1; // acid sprays in a bigger glob
        def_mod  0; // still spongy, but bigger
        dam_mod +1; // acid is stronger
        arm_mod  0; // not much spongier 

        sleep_sprite s_yellow_slime_asleep;
        weapon       t_acid_spray;
        visible      1;
        slots {}

        // The yellow boss slimes can summon the green slimes
        spells { spell_summon_slime }

        STD_DAMAGE_SOUND;
        SQUISHING_SOUND;

        immunities (EFFECT_POISON);
}

#endif // species_ghul

/* eof */
