//
// Copyright-Only Dedication (based on United States law)
//
// The person or persons who have associated their work with this document (the
// "Dedicator") hereby dedicate the entire copyright in the work of authorship
// identified below (the "Work") to the public domain.
//
// Dedicator makes this dedication for the benefit of the public at large and
// to the detriment of Dedicator's heirs and successors. Dedicator intends this
// dedication to be an overt act of relinquishment in perpetuity of all present
// and future rights under copyright law, whether vested or contingent, in the
// Work. Dedicator understands that such relinquishment of all rights includes
// the relinquishment of all rights to enforce (by lawsuit or otherwise) those
// copyrights in the Work.
//
// Dedicator recognizes that, once placed in the public domain, the Work may be
// freely reproduced, distributed, transmitted, used, modified, built upon, or
// otherwise exploited by anyone for any purpose, commercial or non-commercial,
// and in any way, including by methods that have not yet been invented or
// conceived.
//
/* worn_items.ghul
 *
 * Defines object types for armor and worn items such as helms,
 * amulets, rings, boots, and so forth.
 */
#ifndef worn_items_ghul
#define worn_items_ghul


///////////////////////////////////////////////////////////////////////////

#define HELM_TYPE(_tag, _name, _sprite, _att, _def, _weight) \
    ARMS_TYPE(_tag, _name, _sprite, _att, _def, HELM_SLOT,   \
              0, 1, null, 0, 0, null, _weight)

// Helms
HELM_TYPE(t_leather_cap, "leather cap", s_helm1, +0, +1,  2);
HELM_TYPE(t_iron_helm,   "iron helm",   s_helm9, +0, +4, 12);


///////////////////////////////////////////////////////////////////////////

#define SHIELD_TYPE(_tag, _name, _sprite, _att, _def, _weight) \
    ARMS_TYPE(_tag, _name, _sprite, _att, _def, SHIELD_SLOT,   \
              1, 1, null, 0, 0, null, _weight)

// Shields
SHIELD_TYPE(t_sm_shield,  "small shield", s_shield1,   +0, +2, 20);
SHIELD_TYPE(t_lrg_shield, "large shield", s_shield2,   +0, +4, 30);


///////////////////////////////////////////////////////////////////////////

#define ARMOUR_TYPE(_tag, _name, _sprite, _att, _def, _weight) \
    ARMS_TYPE(_tag, _name, _sprite, _att, _def, ARMOUR_SLOT,   \
              0, 1, null, 0, 0, null, _weight)

// Body Armour
ARMOUR_TYPE(t_leather_armor, "hard leather", s_hard_leather, +0, +2, 15);
ARMOUR_TYPE(t_ring_mail,     "ring mail",    s_ring_mail,    -1, +4, 30);
ARMOUR_TYPE(t_plate_armor,   "plate armor",  s_plate_armor,  -2, +8, 60);


///////////////////////////////////////////////////////////////////////////

// Boots

#define BOOTS_TYPE(_tag, _name, _sprite, _att, _def, _weight) \
    ARMS_TYPE(_tag, _name, _sprite, _att, _def, BOOT_SLOT,    \
              0, 1, null, 0, 0, null, _weight)

BOOTS_TYPE(t_shoes,         "shoes",         s_shoes,         +0, +0, 2);
BOOTS_TYPE(t_leather_boots, "leather boots", s_leather_boots, +0, +1, 3);
BOOTS_TYPE(t_plate_boots,   "plate boots",   s_plate_boots,   +0, +2, 6);


///////////////////////////////////////////////////////////////////////////


#endif // worn_items_ghul

/* eof */
