//
// Copyright-Only Dedication (based on United States law)
//
// The person or persons who have associated their work with this document (the
// "Dedicator") hereby dedicate the entire copyright in the work of authorship
// identified below (the "Work") to the public domain.
//
// Dedicator makes this dedication for the benefit of the public at large and
// to the detriment of Dedicator's heirs and successors. Dedicator intends this
// dedication to be an overt act of relinquishment in perpetuity of all present
// and future rights under copyright law, whether vested or contingent, in the
// Work. Dedicator understands that such relinquishment of all rights includes
// the relinquishment of all rights to enforce (by lawsuit or otherwise) those
// copyrights in the Work.
//
// Dedicator recognizes that, once placed in the public domain, the Work may be
// freely reproduced, distributed, transmitted, used, modified, built upon, or
// otherwise exploited by anyone for any purpose, commercial or non-commercial,
// and in any way, including by methods that have not yet been invented or
// conceived.
//
/* P_terrain_test.ghul
 *
 *
 */
#ifndef P_terrain_test_ghul
#define P_terrain_test_ghul


MAP m_terrain_test {
  type    ascii;
  width   24;
  height  32;
  palette pal_expanded;
  terrain {
  //                               1  1  1  1  1  1  1  1  1  1  2  2  2  2 
  // 0  1  2  3  4  5  6  7  8  9  0  1  2  3  4  5  6  7  8  9  0  1  2  3 
   "xx xx xx .. .. xx xx xx .. .. xx .. .. .. xx .. .. xx xx xx .. .. xx xx";  // 0
   "xx .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. xx";  // x
   "xx .. .A .B .C .D .E .F .G .H .. .I .J .K .L .M .N .O .P .. .. .. .. ..";  // x
   ".. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..";  // x
   ".. .. ,A ,B ,C ,D ,E ,F ,G ,H .. ,I ,J ,K ,L ,M ,N ,O ,P .. .. .. .. ..";  // x
   "xx .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. xx";  // x
   "xx .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. xx";  // x
   "xx .. .Q .R .S .T .U .V .W .X .. .Y .Z  [  @  @  @  @ ]  .. .. .. .. xx";  // x
   ".. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..";  // x
   ".. .. ,Q ,R ,S ,T ,U ,V ,W ,X .. ,Y ,Z ;T ;E ;N ;A ;S ;D .. .. .. .. ..";  // x
   "xx .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. xx";  // 10
   "xx .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. xx";  // x
   "xx .. -- -- .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. xx";  // x
   ".. .. -- -- .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..";  // x
   ".. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..";  // x
   ".. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..";  // x
   ".. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..";  // x
   ".. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..";  // x
   ".. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..";  // x
   ".. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..";  // x
   "xx .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. xx";  // 20
   "xx .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. xx";  // x
   "xx .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. xx";  // x
   ".. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..";  // x
   ".. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..";  // x
   "xx .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. xx";  // x
   "xx .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. xx";  // x
   "xx .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. xx";  // x
   ".. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..";  // x
   ".. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. ..";  // x
   "xx .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. .. xx";  // 30
   "xx xx xx .. .. xx xx xx .. .. xx .. .. .. xx .. .. xx xx xx .. .. xx xx";  // 31

  }
} // MAP m_terrain_test


PLACE  p_terrain_test {
  type        town;
  parent      p_wilderness;
  x           34;
  y           14;
  name        "Terrain Test";
  wraps       0;
  map         m_terrain_test;
  underground 0;
  objects {
    // To place most objects, use a line like the below:
    // object_type_tag x y;

    // gmcnutt: the following causes a seg fault if the player tries to open
    // the container. The reason is that t_chest1 is just another object
    // type. When the parser hits the following line it creates an Object whose
    // type is t_chest1. The parser does not realize that the intention is to
    // create specifically a Container Object (Container is a subclass of
    // Object which supports the open() method - Object does not). It could
    // infer this from the layer of t_chest1, I suppose, but I don't think that
    // is the right thing to do in the long run.
    //
    // The reason dropped chests work (as in corpse loot) is because the
    // Character class knows that it specifically wants to create a
    // Container. Currently all working chests are created via this route.
    //
    // This is a problem which is going to be fixed in the 0.3.x series. It's
    // tempting to hack in a tmp fix now, and I might do that to satisfy Sam,
    // but I know the very next thing he'll want is the ability to add items to
    // containers :-).

    t_small_wooden_chest 11 29 null { };  // Container
    t_large_iron_chest   11 30 null {
            t_sword 1; 
            t_arrow 50;
    }

    t_dagger          10 11;  // Weapon (dagger)
    t_long_sword      10 12;

    t_iron_helm       11 11;  // Worn item (helmet)
    t_sm_shield       11 12;
    t_lrg_shield      11 13;
    t_ring_mail       11 14;


    t_short_scroll    10 28;  // Document
    t_sleep_potion 11 28;  // Usable item (potion)

    F_fire    15 20;  // Fire   Field
    F_poison  16 20;  // Poison Field
    F_sleep   15 21;  // Sleep  Field
    F_protect 16 21;  // Protection Field

    t_arrow  2 27 50;  // Ammo (arrows)
    t_bolt   2 28 50;  // Ammo (crossbow bolts)
    t_rock   2 29 20;  // Ammo (rocks)

    t_cannonball 4 25;  // Ammo (cannonball)

    // Not sure these are ever "placed" objects.
    // All the better reason to test them...
    M_fire       4 26;  // Temporary projectiles
    M_protect    4 27;
    M_poison     4 28;
    M_sleep      4 29;
    M_fireball   4 30;

    // To place a vehicle, use a line like the below:
    // vehicle_type x y facing vehicle_HP;
    //vt_ship  2 12 east 100;  // Vehicle (ship)
    vt_horse 2 15 east 100;  // Vehicle (horse)

    // To place a mechanism, use a line like the below:
    // mech_type_tag this_mech_name x y "initial state name";
    mech_L_lever      left_lever   1 20 "up";
    mech_hidden_lever hidden_lever 1 21 "up";  // This one is invisible
  }
  object_type t_town;

} // PLACE  p_terrain_test

#endif // P_terrain_test_ghul

/* eof */
