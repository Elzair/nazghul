//
// Copyright-Only Dedication (based on United States law)
//
// The person or persons who have associated their work with this document (the
// "Dedicator") hereby dedicate the entire copyright in the work of authorship
// identified below (the "Work") to the public domain.
//
// Dedicator makes this dedication for the benefit of the public at large and
// to the detriment of Dedicator's heirs and successors. Dedicator intends this
// dedication to be an overt act of relinquishment in perpetuity of all present
// and future rights under copyright law, whether vested or contingent, in the
// Work. Dedicator understands that such relinquishment of all rights includes
// the relinquishment of all rights to enforce (by lawsuit or otherwise) those
// copyrights in the Work.
//
// Dedicator recognizes that, once placed in the public domain, the Work may be
// freely reproduced, distributed, transmitted, used, modified, built upon, or
// otherwise exploited by anyone for any purpose, commercial or non-commercial,
// and in any way, including by methods that have not yet been invented or
// conceived.
//

#ifndef world_ghul
#define world_ghul


//----------------------------------------------------------------------------
// Game System Rules and Parameters
//
// A normal human will have strength, dexterity and intelligence ranging
// [10..(20)..30] for the 5-95% of the bell curve.
//
// Hit Points
// ==========
//
// 2 hits will kill a typical unarmored human with a typical weapon. Let 20 hp
// be typical for such a human.
//
// hp = base + level * mult
//   base = species + occ + char
//   mult = species + occ + char
// 
// species base = species size (see table below)
//
//   size table
//   ==============================
//   1 (individual insect)
//   5 (rat, snake or insect swarm)
//   10 (humanoid child)
//   15 (small humanoid)
//   20 (typical human)
//   25 (large robust human)
//   30 (ogre)
//   50 (dragon)
//
// occ base = [0(non-combatant or no occ)..10(combatant)]
// char base = [0(nameless)..10(named npc)..n(pc)]
//
// species mult = [0(smallest)..1..2(largest)]
// occ mult = [5(wizards)..10(fighters)]
// char mult = [0(nameless)..0(named npc)..n(pc)] (0 recommended)
//
// Weapons
// =======
// to-hit = +/- 1 digit
// damage = 2 digits, specifying a range with flat distribution
// defense = +/- 1 digit
//
// Armor
// =====
// defense = +/- 1 digit
// armour = 2 digits
// (optionally damage and to-hit for spiked armours)
//
// Basic game random modifier for 
//
// Typical values:
// ========================================================
// item        | to-hit | damage | defense | armour | range
// ========================================================
// club        | +0     | d6+2   | +0      | +0     | 1
// short sword | +1     | d6+2   | +1      | +0     | 1
// long sword  | +2     | d8+2   | +1      | +0     | 2
// dagger      | +3     | d6     | +2      | +0     | 1
// 2h sword    | +1     | d12+4  | -1      | +0     | 2
// 2h club     | +0     | d10+5  | -2      | +0     | 2
// short bow   | +1     | d6     | -2      | +0     | 6
// long bow    | +1     | d8     | -2      | +0     | 9
// flaming oil | +0     | d6     | -2      | +0     | 4
// --------------------------------------------------------
// armour
// --------------------------------------------------------
// leather     | +0     | +0     | +0      | d4-2   | 0
// chain       | +0     | +0     | -1      | d3-1   | 0
// plate       | +0     | +0     | -2      | d3+1   | 0
// --------------------------------------------------------
// helm
// --------------------------------------------------------
// leather     | +0     | +0     | +0      | d3-2   | 0
// chain       | +0     | +0     | -1      | d3-1   | 0
// plate       | +0     | +0     | -1      | 1      | 0
// --------------------------------------------------------
// boots
// --------------------------------------------------------
// leather     | +0     | +0     | +0      | d6-4   | 0
// plate       | +0     | +0     | +0      | d3-1   | 0
// --------------------------------------------------------
// shields
// --------------------------------------------------------
// small       | +0     | +0     | +2      | 1      | 0
// large       | +0     | +0     | +3      | 2      | 0
// spiked      | +0     | d4+1   | +1      | 1      | 1
// ========================================================
//
// Effect damages:
//   Burn   5
//   Poison 1
// 
// 

//----------------------------------------------------------------------------


// SAM: 
// Alignment probably belong in "types.ghul", however
// world-specific alignments such as ALIGN_RED_GOBLIN
// do seem to belong somewhere under "data/world/".
// What to do?

/*** Alignments ***/
#define ALIGN_PLAYER    1 /* bit 0 ALWAYS reserved for player */
#define ALIGN_TOWN      2 /* for townsfolk, guards, domestic animals, etc */
#define ALIGN_MONSTER   4 /* general monster alignment (need SOMETHING so they
                           * don't attack each other by default) 
                           */
#define ALIGN_CAVE_GOBLINS    8

//----------------------------------------------------------------------------
// *** Reserved parameter ID's ***
//
// This is an exhaustive list of all known parameter id's which are reserved by
// the engine. They are all negative to prevent conflicts with the game-defined
// parameter ID's listed below.
//----------------------------------------------------------------------------
#define AMOUNT   -1
#define GOLD     -2
#define FOOD     -3
#define ACTIVITY -4

//----------------------------------------------------------------------------
// *** Global Parameters ID's ***
//
// These parameter ID's are confined to the range 0 - 63. They are accessible
// from all conversation and mechanism scriptlets via the CHANGE_PARM and
// CHECK_PARM constructs.
//----------------------------------------------------------------------------
#define HONOR     0
#define SACRIFICE 1

//----------------------------------------------------------------------------
// *** Global flags ***
//
// These flags are confined to the range 128 - 383. They are accessible from
// all conversation and mechanism scriptlets via the SET_FLAG, CLEAR_FLAG and
// CHECK_FLAG constructs.
//----------------------------------------------------------------------------
#define HELPED_JOAN_OF_MYRE 129

//----------------------------------------------------------------------------
// *** Per-conversation Flags ***
//
// These flags are confined to the range 0 - 127. They are local to each
// conversation, and persistent across multiple sessios of the same 
// conversation. Use the SET_FLAG, CLEAR_FLAG and CHECK_FLAG constructs to
// manipulate them from within conversation and mechanism scriptlets.
//----------------------------------------------------------------------------
#define TELL_SECRET    1
#define GAVE_ITEM      2
#define WILL_JOIN      3
#define GAVE_QUEST     4
#define QUEST_COMPLETE 5

/*** Optional Feature Bindings ***/
#define WATER_COMBAT_MAP 0

/*****************************************************************************
 ***  MAPS  ***
 *****************************************************************************/

  // Some combat maps:
#include "world/maps/terrain_combat_maps.ghul"

  // Miscellaneous maps:
#include "world/maps/M_dark_passage.ghul"
#include "world/maps/M_secret_shrine.ghul"

combat_maps {
  t_grass   m_grass_combat;
  t_trees   m_grass_combat;
  t_forest  m_forest_combat;
  t_bridge  m_east_west_small_bridge_combat;

#if WATER_COMBAT_MAP
  t_shoals  m_water_combat;
  t_shallow m_water_combat;
  t_deep    m_water_combat;
#endif // WATER_COMBAT_MAP

} // combat_maps


/*****************************************************************************
 ***   CONVERSATIONS   ***
 *****************************************************************************/
#include "world/conversations/conversations.ghul"


/*****************************************************************************
 ***  CHARACTERS  ***
 *****************************************************************************/
#include "world/characters/inhabitants_of_britain.ghul"
#include "world/characters/party_members.ghul"


/*****************************************************************************
 ***   MECHANISMS   ***
 *****************************************************************************/
#include "world/mechanisms/all_mechanisms.ghul"


/*****************************************************************************
 ***  PLACES  ***
 *****************************************************************************/
#include "world/places/all_places.ghul"


/*****************************************************************************
 ***  MOONGATES  ***
 *****************************************************************************/
#include "world/astronomy.ghul"


/*****************************************************************************
 ***  PORTALS  ***
 *****************************************************************************/
#include "world/portals.ghul"


/*****************************************************************************
 ***  PLAYER  ***
 *****************************************************************************/
#include "player/party.ghul"


/*****************************************************************************
 ***  CONNECTIONS  ***
 *****************************************************************************/

// gmcnutt: global CONNECTs that link mechs in different places. All mechs need
// to be predeclared.
CONNECT prison_portcullis_lever => prison_portcullis_A;



/*****************************************************************************
 ***  MISC  ***
 *****************************************************************************/

// SAM: 
// Perhaps this could be moved to a point near the CURSOR declaration?
// Currently, it seems to be a requirement that this be at the end.
CROSSHAIR {
  objectType t_cursor;
}

// The optional COMBAT section is for specifying features related to
// combat. Actually, I just needed someplace to put the sounds played for
// entering/exiting combat.
COMBAT {
        enter   "data/sounds/drum_02.wav";   // played on entry to combat
        victory "data/sounds/fanfare7.wav";  // played when victorious
        defeat  "data/sounds/fanfare5.wav";  // played when defeated
}

#endif // world_ghul

/* eof */
