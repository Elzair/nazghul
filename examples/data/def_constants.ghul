//
// Copyright-Only Dedication (based on United States law)
//
// The person or persons who have associated their work with this document (the
// "Dedicator") hereby dedicate the entire copyright in the work of authorship
// identified below (the "Work") to the public domain.
//
// Dedicator makes this dedication for the benefit of the public at large and
// to the detriment of Dedicator's heirs and successors. Dedicator intends this
// dedication to be an overt act of relinquishment in perpetuity of all present
// and future rights under copyright law, whether vested or contingent, in the
// Work. Dedicator understands that such relinquishment of all rights includes
// the relinquishment of all rights to enforce (by lawsuit or otherwise) those
// copyrights in the Work.
//
// Dedicator recognizes that, once placed in the public domain, the Work may be
// freely reproduced, distributed, transmitted, used, modified, built upon, or
// otherwise exploited by anyone for any purpose, commercial or non-commercial,
// and in any way, including by methods that have not yet been invented or
// conceived.
//
/* def_constants.ghul
 *
 * Contains constants defined and used in GhulScript files.
 * Constants shared with the C engine core are in "dup_constants.h".
 */
#ifndef def_constants_ghul
#define def_constants_ghul


/*
 * Some common defines:
 */
#define TRUE  1
#define FALSE 0


/*
 *  Facings. These need to correspond with the direction macros in common.h,
 *  but these are bit masks, whereas those in common.h can be read as bit 
 *  numbers.
 */
#define FAC_NW    1
#define FAC_N     2
#define FAC_NE    4

#define FAC_W     8
#define FAC_H     16
#define FAC_E     32

#define FAC_SW    64
#define FAC_S     128
#define FAC_SE    256

#define FAC_EW    40
#define FAC_NSEW  170


/*
 * Defines for transparency / opacity and such:
 */
#define TRANSPARENT 1
#define OPAQUE      0


/*
 * Targeting Modes (must match similar macros in common.h)
 * SAM: TODO: Move this to dup_constants.h ?
 */
#define TARG_NONE       0
#define TARG_SELF       1
#define TARG_FRIEND     2


/*
 * Armament slot masks
 */
#define NO_SLOT                 0
#define AMULET_SLOT             1
#define RING_SLOT               2
#define GAZER_HELM              4
#define WEAPON_SLOT             8
#define SHIELD_SLOT             8
#define WEAPON_OR_SHIELD_SLOT   8
#define ARMOUR_SLOT             16
#define BOOT_SLOT               32
#define HELM_SLOT               64


/*
 * Morphologies (in terms of Armament slot masks)
 */
#define HUMANOID_MORPHOLOGY        \
    n_slots 8 {                    \
        mask HELM_SLOT             \
        mask AMULET_SLOT           \
        mask WEAPON_OR_SHIELD_SLOT \
        mask WEAPON_OR_SHIELD_SLOT \
        mask ARMOUR_SLOT           \
        mask BOOT_SLOT             \
        mask RING_SLOT             \
        mask RING_SLOT             \
    } 


/*
 * Services (must match the macros in common.h)
 */
#define SRV_HEAL      1
#define SRV_CURE      2
#define SRV_RESURRECT 3


/*
 * Layers (must match the layer enumeration in object.h)
 * SAM: 2003/05/06 Note that they are already a little out
 *                 of sync, though the ORDERING still matches, 
 *                 which is required.
 */
#define LAYER_MECHANISM  1
#define LAYER_PORTAL     2
#define LAYER_VEHICLE    3
#define LAYER_CONTAINER  4
#define LAYER_ITEM       5
#define LAYER_FIELD      6
#define LAYER_BEING      7
#define LAYER_PROJECTILE 8
#define LAYER_CURSOR     9


/* 
 * Passability masks (pmasks)
 */
#define PASS_NONE 0
#define SOLID     1
#define LAND      2
#define WATER     4
#define SHOALS    8
#define BRIDGE    14  // (LAND | WATER | SHOALS)
// SAM: Bridge terrains were using pmask 3 (SOLID | LAND), which didn't seem right...
#define PASS_ALL  255

/*
 * Default map palette (for convenience - I would prefer maps to use their own
 * optimized palettes. An optimized palette contains only the necessary entries
 * and lists them in order of frequency. --gmcnutt).
 */
#define STD_TERRAIN_PALETTE \
palette {                   \
        '_'    t_deep;      \
        '-'    t_shallow;   \
        '~'    t_shoals;    \
        '%'    t_bog;       \
        '.'    t_grass;     \
        't'    t_trees;     \
        '|'    t_forest;    \
        '{'    t_hills;     \
        '^'    t_mountains; \
\
        ','    t_flagstones;    \
        'c'    t_cobblestone;   \
        'e'    t_deck;          \
        '='    t_bridge;        \
        'g'    t_bridge_top;    \
        'h'    t_bridge_bottom; \
\
        'f'    t_fire_terrain;  \
        '!'    t_lava;          \
        '&'    t_fireplace;     \
\
        'x'    t_wall;          \
        '?'    t_secret_door;   \
        'p'    t_pillar;        \
        'b'    t_boulder;       \
        'r'    t_wall_rock;     \
\
        'A'    t_A; \
        'B'    t_B; \
        'C'    t_C; \
        'D'    t_D; \
        'E'    t_E; \
        'F'    t_F; \
        'G'    t_G; \
        'H'    t_H; \
        'I'    t_I; \
        'J'    t_J; \
        'K'    t_K; \
        'L'    t_L; \
        'M'    t_M; \
        'N'    t_N; \
        'O'    t_O; \
        'P'    t_P; \
        'Q'    t_Q; \
        'R'    t_R; \
        'S'    t_S; \
        'T'    t_T; \
        'U'    t_U; \
        'V'    t_V; \
        'W'    t_W; \
        'X'    t_X; \
        'Y'    t_Y; \
        'Z'    t_Z; \
\
        'q'    t_rune_Q; \
\
        '@'    t_counter_middle; \
        '['    t_counter_left;   \
        ']'    t_counter_right;  \
        '0'    t_counter_1x1;    \
\
        '+'    t_ankh;          \
        'a'    t_altar;         \
        '<'    t_leftwing;      \
        '>'    t_rightwing;     \
} // palette

#define STD_EXPANDED_PALETTE \
palette {                   \
        '__'    t_deep;      \
        '--'    t_shallow;   \
        '~~'    t_shoals;    \
        '%%'    t_bog;       \
        '..'    t_grass;     \
        'tt'    t_trees;     \
        '||'    t_forest;    \
        '{{'    t_hills;     \
        '^^'    t_mountains; \
\
        ',,'    t_flagstones;    \
        'cc'    t_cobblestone;   \
        'ee'    t_deck;          \
        '=='    t_bridge;        \
        'gg'    t_bridge_top;    \
        'hh'    t_bridge_bottom; \
\
        'f'    t_fire_terrain;  \
        '!'    t_lava;          \
        '&'    t_fireplace;     \
\
        'x'    t_wall;          \
        '?'    t_secret_door;   \
        'p'    t_pillar;        \
        'b'    t_boulder;       \
        'r'    t_wall_rock;     \
\
        '.A'    t_A; \
        '.B'    t_B; \
        '.C'    t_C; \
        '.D'    t_D; \
        '.E'    t_E; \
        '.F'    t_F; \
        '.G'    t_G; \
        '.H'    t_H; \
        '.I'    t_I; \
        '.J'    t_J; \
        '.K'    t_K; \
        '.L'    t_L; \
        '.M'    t_M; \
        '.N'    t_N; \
        '.O'    t_O; \
        '.P'    t_P; \
        '.Q'    t_Q; \
        '.R'    t_R; \
        '.S'    t_S; \
        '.T'    t_T; \
        '.U'    t_U; \
        '.V'    t_V; \
        '.W'    t_W; \
        '.X'    t_X; \
        '.Y'    t_Y; \
        '.Z'    t_Z; \
\
        ',A'  t_rune_A; \
        ',B'  t_rune_B; \
        ',C'  t_rune_C; \
        ',D'  t_rune_D; \
        ',E'  t_rune_E; \
        ',F'  t_rune_F; \
        ',G'  t_rune_G; \
        ',H'  t_rune_H; \
        ',I'  t_rune_I; \
        ',J'  t_rune_J; \
        ',K'  t_rune_K; \
        ',L'  t_rune_L; \
        ',M'  t_rune_M; \
        ',N'  t_rune_N; \
        ',O'  t_rune_O; \
        ',P'  t_rune_P; \
        ',Q'  t_rune_Q; \
        ',R'  t_rune_R; \
        ',S'  t_rune_S; \
        ',T'  t_rune_T; \
        ',U'  t_rune_U; \
        ',V'  t_rune_V; \
        ',W'  t_rune_W; \
        ',X'  t_rune_X; \
        ',Y'  t_rune_Y; \
        ',Z'  t_rune_Z; \
\
        ';T'  t_rune_TH;  \
        ';E'  t_rune_EE;  \
        ';N'  t_rune_NG;  \
        ';A'  t_rune_EA;  \
        ';S'  t_rune_ST;  \
        ';D'  t_rune_DOT; \
\
        '@'    t_counter_middle; \
        '['    t_counter_left;   \
        ']'    t_counter_right;  \
        '0'    t_counter_1x1;    \
\
        '+'    t_ankh;          \
        'a'    t_altar;         \
        '<'    t_leftwing;      \
        '>'    t_rightwing;     \
} // palette




/*****************************************************************************
 ***   SCHEDULES   ***
 *****************************************************************************/
#define WORKING   0  /* reserved */
#define SLEEPING  1  /* reserved */
#define COMMUTING 2  /* reserved */
#define EATING    3  /* reserved */
#define RELAXING  4
#define IDLE      5



#endif // def_constants_ghul
/* eof */
