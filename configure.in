dnl Process this file with autoconf to produce a configure script.
AC_INIT(README)

dnl Detect the canonical target build environment
AC_CANONICAL_HOST
AC_CANONICAL_TARGET

dnl Setup for automake
AM_INIT_AUTOMAKE(nazghul, 0.1.3)

dnl Check for tools

AC_PROG_MAKE_SET
AC_PROG_CC
AC_PROG_CXX
AC_PROG_RANLIB
AC_PROG_INSTALL

dnl The alpha architecture needs special flags for binary portability
case "$target" in
    alpha*-*-linux*)
        CFLAGS="$CFLAGS -mcpu=ev4 -Wa,-mall"
        ;;
esac

dnl Check for SDL
SDL_VERSION=1.2.0
AM_PATH_SDL($SDL_VERSION,
            :,
            AC_MSG_ERROR([*** SDL version $SDL_VERSION not found!])
)

CFLAGS="$CFLAGS $SDL_CFLAGS -Wall"

# gmcnutt: hack - how do I add a check for the SDL_image lib?
LIBS="$LIBS $SDL_LIBS  -lSDL_image"

dnl Add the include directories for the object libraries
CFLAGS="$CFLAGS -I\$(top_srcdir)/src"

# gmcnutt: Force the compiler to c++ (is this the right way to do this?)
CC=g++
CXX=g++

dnl Set up the game data install directory
case "$target" in
    *-*-mingw32*)
        GAME_INSTALLDIR="."
	ICONOBJ="ico.o"
        ;;
    *-*-beos*)
        ac_default_prefix=/boot/beos
        GAME_INSTALLDIR="\$(prefix)/games/$PACKAGE"
        ;;
    *)
        GAME_INSTALLDIR="\$(prefix)/games/$PACKAGE"
        ;;
esac
AC_SUBST(GAME_INSTALLDIR)
CFLAGS="$CFLAGS"

dnl C++ flags are the same as the C flags
CXXFLAGS="$CXXFLAGS $CFLAGS"

dnl Exclude CVS directories when creating tarball
TAR="$TAR --exclude CVS"

# Finally create all the generated files
AC_OUTPUT([
Makefile
src/Makefile
examples/Makefile
])
